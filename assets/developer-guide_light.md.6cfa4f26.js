import{o as e,c as t,a as r,b as o}from"./app.6f7ae0b0.js";import{_ as n,a,b as l}from"./thonny_upload.d42dd7b1.js";import{_ as i}from"./homital-light.973645b8.js";const s='{"title":"Homital-Light","description":"","frontmatter":{},"headers":[{"level":2,"title":"Project Structure","slug":"project-structure"},{"level":2,"title":"Setup","slug":"setup"},{"level":2,"title":"3D Printed Case","slug":"_3d-printed-case"}],"relativePath":"developer-guide/light.md","lastUpdated":1628066597523}',d={},h=r("h1",{id:"homital-light"},[r("a",{class:"header-anchor",href:"#homital-light","aria-hidden":"true"},"#"),o(" Homital-Light")],-1),c=r("p",null,[r("a",{href:"https://github.com/Homital/Homital-Light",target:"_blank",rel:"noopener noreferrer"},"GitHub")],-1),p=r("p",null,[o("Homital-Light is a smart light in the Homital family. It is developed on top of the "),r("a",{href:"https://www.espressif.com/en/products/socs/esp8266/overview",target:"_blank",rel:"noopener noreferrer"},"ESP8266"),o(" WiFi SoC running "),r("a",{href:"https://micropython.org/",target:"_blank",rel:"noopener noreferrer"},"MicroPython"),o(". The light source used is a "),r("a",{href:"https://cdn-shop.adafruit.com/datasheets/WS2812B.pdf",target:"_blank",rel:"noopener noreferrer"},"WS2812B"),o(" LED ring.")],-1),u=r("h2",{id:"project-structure"},[r("a",{class:"header-anchor",href:"#project-structure","aria-hidden":"true"},"#"),o(" Project Structure")],-1),f=r("div",{class:"language-homital"},[r("pre",null,[r("code",null,".\n├── 3D Models\n│   ├── Base.SLDPRT (the Base as a SolidWorks 2019 Part)\n│   ├── Base.STL (3D printable STL model of the base)\n│   ├── Head.SLDPRT (3D printable CAD model of the head)\n│   └── Head.STL (The Head as a SolidWorks 2019 Part)\n│ \n├── upython (MicroPython scripts)\n│   ├── lib (Dependencies)\n│   │   └── urequests.py (a buggy subset of the CPython requests library)\n│   ├── boot.py (the first script getting ran after startup)\n│   ├── db.py (local persistent storage functionalities)\n│   ├── homital.py (networking utilities)\n│   ├── main.py (the script executed right after boot.py)\n│   ├── np.py (WS2812B LED functinos)\n│   └── readcmd.py (Serial command processing functions)\n│ \n│── .gitignore\n└── README.md (Project Summary)\n")])],-1),m=r("h2",{id:"setup"},[r("a",{class:"header-anchor",href:"#setup","aria-hidden":"true"},"#"),o(" Setup")],-1),g=r("ol",null,[r("li",null,[o("Prepare an ESP8266 development board ("),r("a",{href:"https://a.aliexpress.com/_dUiLPnV",target:"_blank",rel:"noopener noreferrer"},"the one we use"),o(") and a WS2812B LED ring ("),r("a",{href:"https://a.aliexpress.com/_dYrcykT",target:"_blank",rel:"noopener noreferrer"},"the one we use"),o(").")]),r("li",null,"Connect the LED ring's VCC wire to your dev-board's VCC pin, GND to GND, and Date-in to Pin 0 on the dev-board."),r("li",null,[o("Clone the Git repository: "),r("code",null,"git clone https://github.com/Homital/Homital-Light.git"),o(".")]),r("li",null,"Connect The ESP8266 development board to your PC via a USB-TTL converter or FTDI adapter. If your dev board already has the chip soldered on it, simply use a USB cable."),r("li",null,[o("Download the latest MicroPython firmware from "),r("a",{href:"http://micropython.org/download/esp8266/",target:"_blank",rel:"noopener noreferrer"},"here"),o(".")]),r("li",null,[o("Install "),r("a",{href:"https://thonny.org/",target:"_blank",rel:"noopener noreferrer"},"Thonny Python IDE")]),r("li",null,[o("Open Thonny IDE, go to "),r("code",null,"Tools"),o(" -> "),r("code",null,"Options"),o(" -> "),r("code",null,"Interpreter"),o(" and select MicroPython(ESP8266) from the dropdown menu. Click on the button under "),r("code",null,"Firmware"),o(", choose your Port and the firmware you just downloaded and click on install.")])],-1),b=r("p",null,[r("img",{src:n,alt:"Thonny upload firmware"})],-1),y=r("ol",{start:"8"},[r("li",null,"Once the firmware has benn uploaded, close the dialog and you should see a Python shell at the bottom of Thonny window.")],-1),w=r("p",null,[r("img",{src:a,alt:"Python shell"})],-1),v=r("ol",{start:"9"},[r("li",null,[o("Then you can open the "),r("code",null,"/upython"),o(" folder in the Files panel of Thonny at the bottom left, and upload all files and directories to the dev-board, as shown below.")])],-1),P=r("p",null,[r("img",{src:l,alt:"Upload python files"})],-1),S=r("ol",{start:"10"},[r("li",null,[o("Now you have given birth to a new Homital-Light! Reset the devboard and you are ready to go. To configure the device to work with the Homital system, refer to "),r("a",{href:"/user-guide/#homital-smart-device-configuration"},"User Guide"),o(".")])],-1),D=r("h2",{id:"_3d-printed-case"},[r("a",{class:"header-anchor",href:"#_3d-printed-case","aria-hidden":"true"},"#"),o(" 3D Printed Case")],-1),L=r("p",null,"We have prepared a 3D printable model for Homital-Light. Below are the two STL files needed.",-1),_=r("div",{class:"render-wrapper"},[r("iframe",{src:"https://render.githubusercontent.com/view/solid?color_mode=light&commit=910c6c8719e12175b700bbecff75b1030a503f6a&enc_url=68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f486f6d6974616c2f486f6d6974616c2d4c696768742f393130633663383731396531323137356237303062626563666637356231303330613530336636612f33442532304d6f64656c732f426173652e53544c&nwo=Homital%2FHomital-Light&path=3D+Models%2FBase.STL&repository_id=266380158&repository_type=Repository#24b10d0a-13ed-4137-9668-47d4c008ffe7",title:"Base.stl"})],-1),T=r("div",{class:"render-wrapper"},[r("iframe",{src:"https://render.githubusercontent.com/view/solid?color_mode=light&commit=910c6c8719e12175b700bbecff75b1030a503f6a&enc_url=68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f486f6d6974616c2f486f6d6974616c2d4c696768742f393130633663383731396531323137356237303062626563666637356231303330613530336636612f33442532304d6f64656c732f486561642e53544c&nwo=Homital%2FHomital-Light&path=3D+Models%2FHead.STL&repository_id=266380158&repository_type=Repository#a280e2c7-cd4d-4bed-9feb-c44ca48d7a58",title:"Base.stl"})],-1),H=r("p",null,"It is recommanded to print the models using a SLA printer because the models are not optimized for FDM printing. A finished print is shown below:",-1),k=r("p",null,[r("img",{src:i,alt:"Printed model"})],-1);d.render=function(r,o,n,a,l,i){return e(),t("div",null,[h,c,p,u,f,m,g,b,y,w,v,P,S,D,L,_,T,H,k])};export default d;export{s as __pageData};
